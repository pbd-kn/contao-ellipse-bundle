<div class="ce_ellipse">
  <h2>Ellipse mit Linien</h2>

  <!-- Formular -->
  <form method="get" class="ellipse-form">
    <fieldset>
      <legend>Parameter</legend>

      <div class="form-row">
        <label for="A" title="Halbachse in X-Richtung (macht die Ellipse breiter/schmaler)">
          A Halbachse X
        </label>
        <input type="number" step="any" name="A" id="A" value="<?= $this->A ?>">
      </div>

      <div class="form-row">
        <label for="B" title="Halbachse in Y-Richtung (macht die Ellipse höher/flacher)">
          B Halbachse Y
        </label>
        <input type="number" step="any" name="B" id="B" value="<?= $this->B ?>">
      </div>

      <div class="form-row">
        <label for="G" title="Gesamtwinkel in Grad (360 = einmal rum, 720 = zweimal)">
          G Winkel max
        </label>
        <input type="number" step="any" name="G" id="G" value="<?= $this->G ?>">
      </div>

      <div class="form-row">
        <label for="S" title="Abstand der Punkte (Grad) von einem zum andern">
          S Punktschrittweite
        </label>
        <input type="number" step="any" name="S" id="S" value="<?= $this->S ?>">
      </div>

      <div class="form-row">
        <label for="R" title="Raster: jeder Punkt wird mit dem (i+R)-ten verbunden">
          R Reihenfolge Pkt
        </label>
        <input type="number" step="any" name="R" id="R" value="<?= $this->R ?>">
      </div>

      <div class="form-row">
        <label for="lineWidth" title="Dicke der Linien (auch <1 erlaubt, z. B. 0.5)">
          Linienstärke
        </label>
        <input type="number" step="any" name="lineWidth" id="lineWidth" value="<?= $this->lineWidth ?>">
      </div>

      <div class="form-row">
        <label for="lineMode" title="Linienfarbe: fest oder zyklisch wechselnd">
          Linienfarbe
        </label>
        <select name="lineMode" id="lineMode" onchange="toggleCycleColors()">
          <option value="fixed" <?= $this->lineMode=="fixed" ? "selected" : "" ?>>Feste Farbe</option>
          <option value="cycle" <?= $this->lineMode=="cycle" ? "selected" : "" ?>>Zyklische Farben</option>
        </select>
      </div>

      <div class="form-row">
        <label for="lineColor" title="Farbe für feste Linienfarbe (z. B. red, #ff0000)">
          Farbe (bei fest)
        </label>
        <input type="text" name="lineColor" id="lineColor" value="<?= $this->lineColor ?>">
      </div>
    </fieldset>

    <fieldset class="color-fieldset" id="cycleColors">
      <legend>Zyklische Farben leere Felder werden nicht übernommen</legend>
      <div class="color-grid">
        <?php for ($i=1;$i<=6;$i++): 
          $val = $this->cycleColors[$i-1] ?? '';
        ?>
          <div class="color-cell">
            <label for="cycleColor<?= $i ?>" title="Farbe <?= $i ?> für zyklische Farbwahl">
              Farbe <?= $i ?>
            </label>
            <input type="text" name="cycleColor<?= $i ?>" id="cycleColor<?= $i ?>" value="<?= $val ?>">
          </div>
        <?php endfor; ?>
      </div>
    </fieldset>

    <fieldset>
      <legend>Weitere Optionen für Debug</legend>

      <div class="form-row">
        <label for="circleSize" title="Radius der Kreise für die Punkte">
          Punktgröße (r)
        </label>
        <input type="number" step="any" name="circleSize" id="circleSize" value="<?= $this->circleSize ?>">
      </div>

      <div class="form-row">
        <label for="textSize" title="Schriftgröße für die Nummern in den Punkten">
          Textgröße
        </label>
        <input type="number" step="any" name="textSize" id="textSize" value="<?= $this->textSize ?>">
      </div>

      <div class="form-row">
        <label for="showEllipse" title="Ob die Ellipse angezeigt werden soll">
          Ellipse anzeigen
        </label>
        <input type="checkbox" name="showEllipse" id="showEllipse" value="1" <?= $this->showEllipse ? 'checked' : '' ?>>
      </div>

      <div class="form-row">
        <label for="showCircle" title="Kreise mit Nummern an den Punkten anzeigen">
          Kreise + Nummern anzeigen
        </label>
        <input type="checkbox" name="showCircle" id="showCircle" value="1" <?= $this->showCircle ? 'checked' : '' ?>>
      </div>
    </fieldset>

    <div class="form-actions">
      <button type="submit">Neu zeichnen</button>
      <button type="button" onclick="printSVG()">SVG drucken</button>
      <button type="button" onclick="downloadSVG()">SVG speichern</button>
      <button type="button" onclick="toggleHelp(true)">Hilfe anzeigen</button>
    </div>
  </form>

  <!-- SVG -->
  <div id="svg-container">
    <svg id="ellipse-svg"
         xmlns="http://www.w3.org/2000/svg"
         viewBox="<?= $this->viewBox ?>"
         preserveAspectRatio="xMidYMid meet">

      <?php if ($this->showEllipse): ?>
        <ellipse cx="0" cy="0" rx="<?= $this->A ?>" ry="<?= $this->B ?>"
                 stroke="<?= $this->lineColor ?>" stroke-width="<?= $this->lineWidth ?>" fill="none"/>
      <?php endif; ?>

      <?php
      $n = count($this->points);
      for ($i = 0; $i < $n; $i++):
          $j = ($i + $this->R) % $n;
          $x1 = $this->points[$i]['x'];
          $y1 = $this->points[$i]['y'];
          $x2 = $this->points[$j]['x'];
          $y2 = $this->points[$j]['y'];
          $color = ($this->lineMode === "cycle")
              ? $this->cycleColors[$i % count($this->cycleColors)]
              : $this->lineColor;
      ?>
        <line x1="<?= $x1 ?>" y1="<?= $y1 ?>"
              x2="<?= $x2 ?>" y2="<?= $y2 ?>"
              stroke="<?= $color ?>" stroke-width="<?= $this->lineWidth ?>" />
      <?php endfor; ?>

      <?php if ($this->showCircle): ?>
        <?php foreach ($this->points as $idx => $p): ?>
          <circle cx="<?= $p['x'] ?>" cy="<?= $p['y'] ?>"
                  r="<?= $this->circleSize ?>"
                  fill="lightblue" stroke="<?= $this->lineColor ?>" stroke-width="<?= $this->lineWidth ?>" />
          <?php if ($n <= 200): ?>
            <text x="<?= $p['x'] ?>" y="<?= $p['y'] ?>"
                  font-size="<?= $this->textSize ?>"
                  fill="black"
                  text-anchor="middle"
                  dominant-baseline="middle"><?= $idx+1 ?></text>
          <?php endif; ?>
        <?php endforeach; ?>
      <?php endif; ?>
    </svg>
  </div>

  <!-- Popup -->
  <div id="helpPopup" onclick="toggleHelp(false)">
    <div id="helpContent" onclick="event.stopPropagation()">
      <h3>Hilfe zu den Parametern</h3>
      <ul>
        <li><b>A</b>: Halbachse X</li>
        <li><b>B</b>: Halbachse Y</li>
        <li><b>G</b>: Gesamtwinkel (Grad)</li>
        <li><b>S</b>: Schrittweite (Grad)</li>
        <li><b>R</b>: Verbindungsreihenfolge</li>
        <li><b>Kreisgröße</b>: Radius der Marker</li>
        <li><b>Textgröße</b>: Schriftgröße</li>
        <li><b>Linienstärke</b>: Dicke der Linien</li>
        <li><b>Linienfarbe</b>: Fest oder zyklisch</li>
      </ul>
      <button onclick="toggleHelp(false)">Schließen</button>
    </div>
  </div>
</div>

<script>
  function printSVG() {
    const svg = document.getElementById("ellipse-svg").outerHTML;
    const win = window.open('', '', 'width=900,height=700');
    win.document.write(`<html><head><title>Drucken</title></head>
      <body onload="window.print();window.close()">${svg}</body></html>`);
    win.document.close();
  }

  function downloadSVG() {
    const svg = document.getElementById("ellipse-svg").outerHTML;
    const blob = new Blob([svg], {type: "image/svg+xml;charset=utf-8"});
    const url = URL.createObjectURL(blob);
    const link = document.createElement("a");
    link.href = url;
    link.download = "ellipse.svg";
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
    URL.revokeObjectURL(url);
  }

  function toggleHelp(show) {
    document.getElementById("helpPopup").style.display = show ? "flex" : "none";
  }

  function toggleCycleColors() {
    const mode = document.getElementById("lineMode").value;
    const fieldset = document.getElementById("cycleColors");
    fieldset.style.display = (mode === "cycle") ? "block" : "none";
  }
  document.addEventListener("DOMContentLoaded", toggleCycleColors);
</script>
